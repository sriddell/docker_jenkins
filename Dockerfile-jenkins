FROM jenkins/jenkins:2.249.3
USER root

RUN apt-get update
RUN apt-get upgrade ca-certificates -y --allow-unauthenticated
RUN apt-get -y install sudo uuid jq python-pip python-dev build-essential libtap-formatter-junit-perl zip uuid-runtime rsync net-tools && \
    pip install --upgrade awscli

RUN echo 'jenkins ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/jenkins
RUN groupadd docker

ARG CACHEBUST=1

ADD ./install_docker.sh /tmp
RUN chmod +x /tmp/install_docker.sh && \
    cd /tmp && \
    ./install_docker.sh

#RUN touch /var/run/docker.sock
#RUN chown root:docker /var/run/docker.sock

#The install-plugins.sh in the base image appears to have bugs, replacing it with a working one


#We can't install plugins or anything in jenkins home as part of the docker build, because it affects the jenkins home,
# which is a VOLUME in the parent image so downstream builds can't modify it.
# So we will move the jenkins.sh to a backup, and then add a new jenkins.sh script that
#installs the plugins at startup, then invokes the original startup script.
RUN mv /usr/local/bin/jenkins.sh /usr/local/bin/jenkins_orig.sh
COPY ./startup.sh /usr/local/bin/jenkins.sh
RUN chmod +x /usr/local/bin/jenkins.sh

#Put jenkins in needed groups to access docker
RUN adduser jenkins docker
RUN adduser jenkins users

COPY ./jenkins/artifactory_plugin.xml /tmp/artifactory_plugin.xml
ARG DOCKER_HOST_ADDR
RUN echo $DOCKER_HOST_ADDR
RUN sed -i "s/DOCKER_HOST_ADDR/$DOCKER_HOST_ADDR/g" /tmp/artifactory_plugin.xml
RUN chown jenkins:jenkins /tmp/artifactory_plugin.xml
RUN mkdir /casc_configs
RUN chown jenkins:jenkins /casc_configs
ENV CASC_JENKINS_CONFIG=/casc_configs
#Switch back to jenkins user and store the plugins
USER jenkins
RUN mkdir /var/jenkins_home/workspace

COPY ./build/plugins.txt /usr/share/jenkins/ref/plugins.txt

COPY ./jenkins/casc/credentials.yaml /casc_configs
#Set username, password, and updates URL
ENV JENKINS_USER admin
ENV JENKINS_PASS admin
ENV JENKINS_UC https://updates.jenkins.io


RUN chown jenkins:jenkins /casc_configs


# Skip initial setup
ENV JAVA_OPTS -Djenkins.install.runSetupWizard=false

#Add bootstrapping scripts and configuration
COPY ./jenkins/executors.groovy /usr/share/jenkins/ref/init.groovy.d/
COPY ./jenkins/default-user.groovy /usr/share/jenkins/ref/init.groovy.d/



